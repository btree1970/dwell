"""initial_migration

Revision ID: b19f72a13604
Revises:
Create Date: 2025-08-14 15:38:37.999963

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "b19f72a13604"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "listings",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("price", sa.Float(), nullable=True),
        sa.Column(
            "price_period",
            sa.Enum("DAY", "WEEK", "MONTH", name="priceperiod"),
            nullable=True,
        ),
        sa.Column("start_date", sa.DateTime(), nullable=True),
        sa.Column("end_date", sa.DateTime(), nullable=True),
        sa.Column("neighborhood", sa.String(), nullable=True),
        sa.Column("brief_description", sa.String(), nullable=True),
        sa.Column("full_description", sa.String(), nullable=True),
        sa.Column("contact_name", sa.String(), nullable=True),
        sa.Column("contact_email", sa.String(), nullable=True),
        sa.Column("source_site", sa.String(), nullable=False),
        sa.Column(
            "listing_type",
            sa.Enum("SUBLET", "RENTAL", name="listingtype"),
            nullable=False,
        ),
        sa.Column("detail_fetched", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "tasks",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("task_type", sa.String(), nullable=False),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("context", sa.JSON(), nullable=True),
        sa.Column("result", sa.JSON(), nullable=True),
        sa.Column("error_message", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("started_at", sa.DateTime(), nullable=True),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_sessions",
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("session_id", sa.String(), nullable=False),
        sa.Column("message_history", sa.JSON(), nullable=True),
        sa.Column("initiated", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("user_id"),
        sa.UniqueConstraint("session_id"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("auth_user_id", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("occupation", sa.String(), nullable=True),
        sa.Column("bio", sa.String(), nullable=True),
        sa.Column("min_price", sa.Float(), nullable=True),
        sa.Column("max_price", sa.Float(), nullable=True),
        sa.Column(
            "price_period",
            sa.Enum("DAY", "WEEK", "MONTH", name="priceperiod"),
            nullable=False,
        ),
        sa.Column("preferred_start_date", sa.DateTime(), nullable=True),
        sa.Column("preferred_end_date", sa.DateTime(), nullable=True),
        sa.Column(
            "preferred_listing_type",
            sa.Enum("SUBLET", "RENTAL", name="listingtype"),
            nullable=True,
        ),
        sa.Column("date_flexibility_days", sa.Integer(), nullable=False),
        sa.Column("preference_profile", sa.String(), nullable=True),
        sa.Column("preference_history", sa.JSON(), nullable=True),
        sa.Column("preference_version", sa.Integer(), nullable=False),
        sa.Column("last_preference_update", sa.DateTime(), nullable=True),
        sa.Column("evaluation_credits", sa.Float(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_users_auth_user_id"), "users", ["auth_user_id"], unique=True
    )
    op.create_table(
        "listing_evaluations",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("listing_id", sa.String(), nullable=False),
        sa.Column("score", sa.Integer(), nullable=False),
        sa.Column("reasoning", sa.String(), nullable=False),
        sa.Column("cost_usd", sa.Float(), nullable=False),
        sa.Column("tokens_used", sa.Integer(), nullable=False),
        sa.Column("model_used", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["listing_id"],
            ["listings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("listing_evaluations")
    op.drop_index(op.f("ix_users_auth_user_id"), table_name="users")
    op.drop_table("users")
    op.drop_table("user_sessions")
    op.drop_table("tasks")
    op.drop_table("listings")
    # ### end Alembic commands ###
